{"version":3,"sources":["firebase.js","components/AddToList.js","components/ProfileLists.js","components/StatusMessage.js","queriesAuthors.js","components/Map.js","components/Calendar.js","components/SimilarAuthors.js","components/Topics.js","components/PublishedIn.js","components/LatestPublished.js","components/WordCloud.js","components/TableRow.js","components/QueryLoader.js","components/Authors.js","components/Search.js","components/LoginNotice.js","react-auth0-spa.js","components/NavigationBar.js","components/Keywords.js","queriesKeywords.js","App.js","serviceWorker.js","utils/history.js","index.js"],"names":["firebaseClient","firebase","initializeApp","apiKey","process","authDomain","databaseURL","projectId","database","ref","auth","currentUser","uid","limitToLast","once","names","val","Object","values","reverse","token","signInWithCustomToken","profile","updateProfile","displayName","name","photoURL","picture","signOut","page","value","endpoint","push","list","base64list","Buffer","from","toString","set","author","base64author","moment","unix","AddToList","props","React","useState","getAuthorRecords","setAuthorRecords","getRefresh","setRefresh","getPopup","setPopup","target","useRef","useEffect","getAuthorList","then","res","popupHandler","setTimeout","alignRight","title","variant","size","className","onClick","addAuthorToList","keys","length","mappedLists","map","el","index","base64name","Item","eventKey","key","Divider","listHandler","placeholder","onKeyPress","e","charCode","typedValue","document","querySelector","current","show","placement","ProfileLists","getListNum","setListNum","getAuthNum","setAuthNum","resKeys","authNum","resKey","fluid","sm","translateY","opacity","easing","duration","delay","text","lastUpdated","lastupdated","unbase64list","removeAuthorList","mappedListValues","entries","i","unbase64author","style","cursor","textDecoration","changeSearch","calendar","textAlign","icon","faTimes","color","window","confirm","removeAuthor","xs","faTrashAlt","striped","responsive","width","instant","transparent","noborder","error","loading","animation","getAuthorsArticleArchive","Map","height","latitude","longitude","zoom","mapStyle","mapboxApiAccessToken","viewport","setViewport","openGeocoder","geocode","location","end","err","console","log","parseFloat","lat","lon","offsetTop","role","aria-label","Calendar","dates","dateTo","yearHeight","articles","query","data","Author","Article_Archive","datesData","dateCounts","filter","Date","year","month","day","sort","a","b","format","parseInt","split","forEach","x","mmddyy","k","v","margin","to","top","right","bottom","left","align","minValue","emptyColor","colors","yearSpacing","monthBorderColor","dayBorderWidth","daySpacing","dayBorderColor","legends","anchor","direction","itemCount","itemWidth","itemHeight","itemsSpacing","itemDirection","SimilarAuthors","entities","Similar_Authors","Button","Similar_Author","Badge","Similarity_Score","toFixed","changeAuthor","kv","Topics","topics","Main_Categories","totalPercentage","topicGen","poc","Percent_of_Coverage","marginBottom","paddingLeft","Main_Topic","Table","hover","borderless","borderRadius","PublishedIn","domains","Published_Domains","getNumdomains","setNumdomains","Number_Of_Articles","getDomains","getIndexShow","setIndexShow","getExpanded","setExpanded","indexHandler","articleHandler","domain","filteredDomains","parseDomain","URL","tld","constructedListItems","href","rel","Title","domainlist","roundedPageRank","Open_Page_Rank","Fragment","Domain_Name","backgroundColor","colSpan","padding","LatestPublished","numarticles","setNumarticles","articlelist","article","Card","Subtitle","WordCloud","fontSizes","xl","fontSize","lg","md","changeSearchHandler","term","entityHandler","word","TableRow","oneColumn","colspan","children","emojiDescription","emoji","QueryLoader","useQuery","variables","queryResult","fetching","StatusMessage","cloneElement","Authors","authorName","gqlresBase","authorBase","Container","Row","Col","Image","src","emails","md5","roundedCircle","str","emailArray","email","emailHandler","bordered","twitter","facebook","linkedin","url","position","current_company","current_company_size","current_company_website","company","pagerank","Search","heading","recentList","pageName","recentAuthors","recentKeywords","recentHandler","onSubmit","setSearch","type","id","DEFAULT_REDIRECT_CALLBACK","history","replaceState","pathname","Auth0Context","createContext","useAuth0","useContext","NavigationBar","isAuthenticated","loginWithRedirect","logout","user","Navbar","collapseOnSelect","expand","bg","Brand","Toggle","aria-controls","Collapse","Nav","Link","setPage","alt","alignSelf","NavDropdown","disabled","Keywords","search_input","keywordName","min_pagerank","Term_Search_Most_Associated_Keywords","Term_Search_Most_Associated_Entities","Term_Search_Most_Associated_Articles","Term_Search_Most_Associated_Domains","Term_Search_Most_Associated_Authors","Term_Search_Most_Associated_Topics","GraphQLClient","createClient","App","getSearch","getRecentAuthorSearches","setRecentAuthorSearches","getRecentKeywordSearches","setRecentKeywordSearches","getPageName","setPageName","recentAuthorSearches","recentKeywordSearches","loadSearchViaChild","async","searchBarNameValue","addRecentSearch","preventDefault","LoginNotice","Boolean","hostname","match","createBrowserHistory","ReactDOM","render","onRedirectCallback","initOptions","setIsAuthenticated","setUser","auth0Client","setAuth0","setLoading","popupOpen","setPopupOpen","createAuth0Client","auth0FromHook","search","includes","handleRedirectCallback","appState","getUser","getIdTokenClaims","auth0token","fetch","headers","__raw","fbresponse","json","fbdata","setToken","firebaseToken","initAuth0","Provider","loginWithPopup","params","getTokenSilently","getTokenWithPopup","client_id","redirect_uri","targetUrl","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.86510c21.chunk.js","sourcesContent":["import firebase from 'firebase'\r\nimport moment from 'moment'\r\n\r\nclass Firebase {\r\n  constructor() {\r\n    firebase.initializeApp({\r\n      apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n      authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n      databaseURL: process.env.REACT_APP_FIREBASE_DBURL,\r\n      projectId: process.env.REACT_APP_FIREBASE_PROJECTID,\r\n    });\r\n  }\r\n\r\n  async recentAuthorSearches() {\r\n    const names = await firebase.database().ref(`/users/${firebase.auth().currentUser.uid}/searchHistory`).limitToLast(5).once('value')\r\n    if (names.val()) return Object.values(names.val()).reverse()\r\n    return []\r\n  }\r\n\r\n  async recentKeywordSearches() {\r\n    const names = await firebase.database().ref(`/users/${firebase.auth().currentUser.uid}/keywordSearchHistory`).limitToLast(5).once('value')\r\n    if (names.val()) return Object.values(names.val()).reverse()\r\n    return []\r\n  }\r\n\r\n  async setToken(token) {\r\n    await firebase.auth().signInWithCustomToken(token);\r\n  }\r\n\r\n  async updateProfile(profile) {\r\n    if (!firebase.auth().currentUser) return;\r\n    await firebase.auth().currentUser.updateProfile({\r\n      displayName: profile.name,\r\n      photoURL: profile.picture,\r\n    });\r\n  }\r\n\r\n  async signOut() {\r\n    await firebase.auth().signOut();\r\n  }\r\n\r\n  async addRecentSearch(page,value) {\r\n    // const author = firebase.auth().currentUser.displayName;\r\n    let endpoint\r\n    switch(page){\r\n      case 'authors':\r\n        endpoint = 'searchHistory'\r\n        break\r\n      case 'keywords':\r\n        endpoint = 'keywordSearchHistory'\r\n        break\r\n      default:\r\n        endpoint = 'searchHistory'\r\n    }\r\n    firebase.database().ref(`/users/${firebase.auth().currentUser.uid}/${endpoint}`).push(value)\r\n  }\r\n\r\n  async getAuthorList() {\r\n    const list = await firebase.database().ref(`/users/${firebase.auth().currentUser.uid}/authorLists`).once('value')\r\n    if (!list.val()) return {};\r\n    return await list.val()\r\n  }\r\n\r\n  async removeAuthorList(list) {\r\n    const base64list = Buffer.from(list).toString('base64')\r\n    firebase.database().ref(`/users/${firebase.auth().currentUser.uid}/authorLists/${base64list}`).set(null)\r\n  }\r\n\r\n  async removeAuthor(author, list=\"uncategorized\") {\r\n    const base64author = Buffer.from(author).toString('base64')\r\n    const base64list = Buffer.from(list).toString('base64')\r\n    firebase.database().ref(`/users/${firebase.auth().currentUser.uid}/authorLists/${base64list}/names/${base64author}`).set(null)\r\n  }\r\n\r\n  async addAuthorToList(author,list=\"uncategorized\") {\r\n    const base64author = Buffer.from(author).toString('base64')\r\n    const base64list = Buffer.from(list).toString('base64')\r\n    firebase.database().ref(`/users/${firebase.auth().currentUser.uid}/authorLists/${base64list}/lastupdated`).set(moment().unix())\r\n    firebase.database().ref(`/users/${firebase.auth().currentUser.uid}/authorLists/${base64list}/names/${base64author}`).set(moment().unix())\r\n  }\r\n}\r\n\r\nconst firebaseClient = new Firebase();\r\nexport {firebaseClient};","import React from 'react';\r\nimport { SplitButton, Dropdown, FormControl, Badge, Overlay, Tooltip } from 'react-bootstrap'\r\n\r\nimport { firebaseClient } from '../firebase'\r\n\r\nconst AddToList = props => {\r\n  const [getAuthorRecords, setAuthorRecords] = React.useState({})\r\n  // The get/setRefresh stateful variable is incremented to trigger useEffect\r\n  const [getRefresh, setRefresh] = React.useState(0)\r\n  const [getPopup, setPopup] = React.useState(false)\r\n\r\n  const target = React.useRef(null);\r\n\r\n  React.useEffect(()=>{\r\n    firebaseClient.getAuthorList()\r\n      .then(res=>{\r\n        setAuthorRecords(res)\r\n      })\r\n  }, [getRefresh])\r\n\r\n  const keyPressHandler = e => {\r\n    if (e.charCode === 13) {\r\n      const typedValue = document.querySelector('.newlistentry').value\r\n      if (typedValue){\r\n        firebaseClient.addAuthorToList(props.author, typedValue)\r\n        document.querySelector('.newlistentry').value = ''\r\n        popupHandler()\r\n        setRefresh(getRefresh + 1)\r\n      }\r\n    }\r\n  }\r\n\r\n  const popupHandler = () => {\r\n    setPopup(true)\r\n    setTimeout(()=>setPopup(false),2000)\r\n  }\r\n\r\n\r\n  const listHandler = () => {\r\n    if (Object.keys(getAuthorRecords).length === 0) return null;\r\n    const listKeys = Object.keys(getAuthorRecords)\r\n    const mappedLists = listKeys.map((el,index)=>{\r\n      const base64name = Buffer.from(el,'base64').toString('ascii')\r\n      return (\r\n      <Dropdown.Item \r\n        eventKey={index} \r\n        key={index} \r\n        onClick={() => {\r\n          firebaseClient.addAuthorToList(props.author, base64name);\r\n          setRefresh(getRefresh + 1)\r\n          popupHandler()\r\n        }}>\r\n        {base64name === 'uncategorized' ? <em className=\"text-muted\">{base64name}</em> : base64name} <Badge variant=\"secondary\" className=\"ml-2\">{Object.keys(getAuthorRecords[el].names).length}</Badge>\r\n      </Dropdown.Item>\r\n    )})\r\n    mappedLists.push(<Dropdown.Divider key='iHadToPutThisHereToSilenceTheError'/>)\r\n    return mappedLists\r\n  }\r\n    \r\n  return (\r\n    <>\r\n    <SplitButton \r\n      alignRight\r\n      title=\"Add to my saved authors\"\r\n      variant=\"outline-secondary\"\r\n      size=\"sm\"\r\n      ref={target}\r\n      className=\"ml-3 mb-3 d-inline-block align-middle saved-authors-dropdown-shadow\"\r\n      onClick={()=>{\r\n        popupHandler()\r\n        firebaseClient.addAuthorToList(props.author);\r\n        setRefresh(getRefresh + 1)\r\n      }}\r\n    >\r\n      {listHandler()}\r\n      \r\n      <FormControl\r\n        className=\"mx-3 my-2 w-auto newlistentry\"\r\n        placeholder=\"Create a new list...\"\r\n        onKeyPress={keyPressHandler}\r\n        />\r\n\r\n    </SplitButton>\r\n    <Overlay target={target.current} show={getPopup} placement=\"top\">\r\n      {props => (\r\n        <Tooltip {...props}>\r\n          Added!\r\n        </Tooltip>\r\n      )}\r\n    </Overlay>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\nexport default AddToList","import React from 'react';\r\nimport { Container, Row, Col, Table } from 'react-bootstrap'\r\nimport { firebaseClient } from '../firebase'\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTrashAlt, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport Anime from 'react-anime'\r\n\r\nimport StatusMessage from './StatusMessage'\r\n\r\nimport moment from 'moment'\r\n\r\nconst ProfileLists = props => {\r\n  const [getAuthorRecords, setAuthorRecords] = React.useState({})\r\n  const [getListNum,setListNum] = React.useState(0)\r\n  const [getAuthNum,setAuthNum] = React.useState(0)\r\n  // The get/setRefresh stateful variable is incremented \r\n  // to refresh the use of the useEffect hook.\r\n  // eslint-disable-next-line\r\n  const [getRefresh, setRefresh] = React.useState(0)\r\n\r\n  const iconColor = \"#aaa\"\r\n\r\n  React.useEffect(() => {\r\n    firebaseClient.getAuthorList()\r\n      .then(res => {\r\n        let resKeys = Object.keys(res);\r\n        let authNum = 0;\r\n        for(let resKey of resKeys) {\r\n          authNum += Object.keys(res[resKey]['names']).length\r\n        };\r\n        setListNum(resKeys.length)\r\n        setAuthNum(authNum)\r\n        setAuthorRecords(res)\r\n      })\r\n\r\n  }, [getRefresh])\r\n\r\n  const listHandler = () => {\r\n    if (Object.keys(getAuthorRecords).length === 0) {\r\n      return <StatusMessage text=\"Search for authors and keywords to create your first list.\" />;\r\n    }\r\n    const listKeys = Object.keys(getAuthorRecords)\r\n\r\n    const mappedLists = listKeys.map((el, index) => {\r\n      const lastUpdated = getAuthorRecords[el].lastupdated\r\n      const unbase64list = Buffer.from(el,'base64').toString('ascii')\r\n      if (!getAuthorRecords[el].names) {\r\n        firebaseClient.removeAuthorList(unbase64list)\r\n        return null\r\n      };\r\n      const mappedListValues = Object.entries(getAuthorRecords[el].names).reverse().map((name,i)=>{\r\n        const unbase64author = Buffer.from(name[0],'base64').toString('ascii')\r\n        return(\r\n        <tr key={i}>\r\n          <td>\r\n            <span style={{cursor:'pointer',textDecoration:'underline'}}\r\n                onClick={() => props.changeSearch('authors',unbase64author)}>\r\n              {unbase64author}\r\n            </span>\r\n          </td>\r\n          <td>{moment(moment.unix(name[1])).calendar()}</td>\r\n          <td style={{textAlign:'center'}}>\r\n            <FontAwesomeIcon icon={faTimes}\r\n              size=\"lg\"\r\n              color={iconColor}\r\n              style={{ cursor: 'pointer' }}\r\n              onClick={() => {\r\n                if (window.confirm(`Are you sure you want to remove \"${unbase64author}\" from this list?`)) {\r\n                  firebaseClient.removeAuthor(unbase64author, unbase64list)\r\n                  setRefresh(getRefresh + 1)\r\n                }\r\n              }} />\r\n          </td>\r\n        </tr>\r\n      )})\r\n\r\n      return (\r\n        <>\r\n        <Container className=\"bg-light my-5 rounded border\">\r\n          <Row className=\"align-items-top\">\r\n            <Col className=\"p-3\">\r\n              <h4>{unbase64list}</h4>\r\n              <small>Last updated: {moment(moment.unix(lastUpdated)).calendar()}</small>\r\n            </Col>\r\n            <Col xs=\"auto pt-4 pr-4\">\r\n              <FontAwesomeIcon icon={faTrashAlt} \r\n                size=\"lg\" \r\n                color={iconColor} \r\n                style={{ cursor : 'pointer' }} \r\n                onClick={()=>{\r\n                  if (window.confirm(`Are you sure you want to delete the \"${unbase64list}\" list?`)){\r\n                    firebaseClient.removeAuthorList(unbase64list)\r\n                    setRefresh(getRefresh + 1)\r\n                  }\r\n                }}/>\r\n            </Col>\r\n          </Row>\r\n          <Row>\r\n            <Col>\r\n              <Table className=\"mt-2 mb-2\" striped responsive>\r\n                <tbody>\r\n                  <tr>\r\n                    <th>Name</th>\r\n                    <th style={{ width: 250 }}>Added</th>\r\n                    <th style={{ width: 100 }}>Remove</th>\r\n                  </tr>\r\n                </tbody>\r\n                {mappedListValues}\r\n              </Table>\r\n            </Col>\r\n          </Row>\r\n        </Container>\r\n        </>\r\n      )\r\n    })\r\n    return mappedLists\r\n  }\r\n\r\n  return (\r\n    <>\r\n    <Container fluid className=\"bg-light py-4\">\r\n      <Container className=\"mt-5 mb-3\">\r\n        <Row>\r\n          <Col sm={'auto'}>\r\n            <h2>My Saved Authors</h2>\r\n            <p>{getListNum} Lists with {getAuthNum} Authors</p>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n    <Anime translateY={['-2em', 0]}\r\n      opacity={[0, 1]}\r\n      easing=\"easeOutBack\"\r\n      duration={300}\r\n      delay={(el, index) => {return index * 200}}>\r\n      {listHandler()}\r\n    </Anime>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default ProfileLists","import React from 'react';\r\nimport { Container, Row, Col, Spinner } from 'react-bootstrap'\r\nimport Anime from 'react-anime'\r\n\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\r\n\r\n// This is a status message generating component\r\n// -----\r\n// [boolean] transparent: no background color on the message container\r\n// [boolean] noborder: no border on the message container\r\n// [string]   text: what is displayed inside the message\r\n// [boolean] error: display a font-awesome X above message\r\n// [boolean] instant: sets anime.js animation duration to 0\r\n// -----\r\n\r\nexport default props => (\r\n  <Anime translateY={['-2em', 0]}\r\n    opacity={[0, 1]}\r\n    easing=\"easeInOutQuart\"\r\n    duration={props.instant ? 0 : 850}>\r\n    <Container className={`${props.transparent?'bg-transparent':'bg-light'} my-5 py-5 rounded text-black-50 ${props.noborder || 'border'}`}>\r\n      <Row className=\"align-items-center text-center\">\r\n        <Col>\r\n          {props.error && <FontAwesomeIcon icon={faTimes}\r\n            size=\"lg\"\r\n            color={'#aaa'} />}\r\n          {props.loading && <Spinner animation=\"grow\" variant=\"secondary\" size=\"sm\" className=\"mb-2\" />}\r\n          <p className=\"my-0\">{props.text}</p>\r\n        </Col>\r\n      </Row>\r\n    </Container>\r\n  </Anime>\r\n)","export const getAuthorsMainCategory = `\r\n  query GetAuthors($name: String!){\r\n      Author(name: $name){\r\n        Main_Categories(name: $name){\r\n          Main_Topic,\r\n          Percent_of_Coverage,\r\n        }\r\n      }\r\n    }`\r\nexport const getAuthorsSubCategories = `\r\n  query GetAuthors($name: String!){\r\n      Author(name: $name){\r\n        Sub_Categories(name: $name){\r\n          Sub_Topic,\r\n          Percent_of_Coverage,\r\n        }\r\n      }\r\n    }`\r\nexport const getAuthorsDiscussesEntities = `\r\n  query GetAuthors($name: String!){\r\n      Author(name: $name){\r\n        Discusses_Entities(name: $name){\r\n          Entity,\r\n          Mentions,\r\n        }\r\n      }\r\n    }`\r\nexport const getAuthorsDiscussesKeywords = `\r\n  query GetAuthors($name: String!){\r\n      Author(name: $name){\r\n         Discusses_Keywords(name: $name){\r\n          Keyword,\r\n          Mentions,\r\n        }\r\n      }\r\n    }`\r\nexport const getAuthorsPublishedDomains = `\r\n  query GetAuthors($name: String!){\r\n      Author(name: $name){\r\n        Published_Domains(name: $name){\r\n          Domain_Name,\r\n          Open_Page_Rank,\r\n          Number_Of_Articles,\r\n          Alexa_Rank,\r\n          Domain_Authority,\r\n          Location,\r\n          Moz_Rank,\r\n        },\r\n        Article_Archive(name: $name){\r\n          URL,\r\n          Date {\r\n            year,\r\n            month,\r\n            day\r\n          },\r\n          Title,\r\n        }\r\n      }\r\n    }`\r\nexport const getAuthorsArticleArchive = `\r\n  query GetAuthors($name: String!){\r\n      Author(name: $name){\r\n        Article_Archive(name: $name){\r\n          URL,\r\n          Date {\r\n            year,\r\n            month,\r\n            day\r\n          },\r\n          Title,\r\n        }\r\n      }\r\n    }`\r\nexport const getAuthorsSimilarAuthors = `\r\n  query GetAuthors($name: String!, $pagerank: Float!){\r\n      Author(name: $name){\r\n        Similar_Authors(name: $name, min_pagerank: $pagerank){\r\n          Similar_Author,\r\n          Emails,\r\n          MuckRack,\r\n          Similarity_Score,\r\n        }\r\n      }\r\n    }`\r\n\r\nexport const getAuthorsBaseInfo = `\r\n  query GetAuthors($name: String!)\r\n    {\r\n      Author(name: $name){\r\n        name,\r\n        emails,\r\n        twitter,\r\n        position,\r\n        company,\r\n        companies,\r\n        current_company,\r\n        current_company_size,\r\n        current_company_website,\r\n        emails,\r\n        facebook,\r\n        klout,\r\n        known_domains,\r\n        linkedin,\r\n        location,\r\n        medium,\r\n        phone_number\r\n      }\r\n    }\r\n  `","import React, { useState, useEffect } from 'react';\r\nimport ReactMapGL, { Marker } from 'react-map-gl';\r\n\r\nimport openGeocoder from 'node-open-geocoder'\r\n\r\nlet Map = props => {\r\n\r\n  const [viewport, setViewport] = useState({\r\n    width: '100%',\r\n    height: 350,\r\n    latitude: 0,\r\n    longitude: 0,\r\n    zoom: 0,\r\n    mapStyle: 'mapbox://styles/mtdvis/ck5fqgnby0s951ip1t3x0mvq5',\r\n    mapboxApiAccessToken: process.env.REACT_APP_MAPBOX_APIKEY,\r\n  });\r\n\r\n\r\n  useEffect(() => {\r\n    openGeocoder().geocode(props.location).end((err,res)=>{\r\n      console.log(res)\r\n      if (res[0]){\r\n        setViewport({\r\n          ...viewport,\r\n          latitude: parseFloat(res[0].lat),\r\n          longitude: parseFloat(res[0].lon),\r\n          zoom: 10\r\n        })\r\n      }\r\n    })\r\n  // eslint-disable-next-line\r\n  },[])\r\n\r\n  return (\r\n    <div className=\"d-flex justify-content-center my-3 border\">\r\n      <ReactMapGL {...viewport}>\r\n        <Marker latitude={viewport.latitude} longitude={viewport.longitude} offsetTop={-30}>\r\n          <div><span role=\"img\" aria-label=\"Marker\" className=\"h2\">📍</span></div>\r\n        </Marker>\r\n      </ReactMapGL>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Map","import React from 'react'\r\nimport { ResponsiveCalendar } from '@nivo/calendar'\r\nimport moment from 'moment'\r\n\r\nconst Calendar = props => {\r\n\r\n  const articles = props.query.data.Author[0].Article_Archive\r\n\r\n  if(articles.length === 0) return 'Not enough information to display.';\r\n\r\n  let dates, dateTo, yearHeight\r\n  let datesData = []\r\n  let dateCounts = {}\r\n\r\n  dates = articles\r\n    .filter(value => value.Date.year)\r\n    .map((value, index) => {\r\n      return moment(`${value.Date.year}-${value.Date.month}-${value.Date.day}`).unix()\r\n    })\r\n  dates.sort((a, b) => a - b)\r\n  // dateFrom = moment.unix(dates[0]).format('YYYY-MM-DD')\r\n  dateTo = moment.unix(dates[dates.length - 1]).format('YYYY-MM-DD')\r\n  yearHeight = parseInt(dateTo.split('-')[0]) - 2018 >= 0 ? ((parseInt(dateTo.split('-')[0]) - 2018 + 1) * 140) + 50 : 0\r\n  dates.forEach(x => {\r\n    let mmddyy = moment.unix(x).format('YYYY-MM-DD')\r\n    dateCounts[mmddyy] = (dateCounts[mmddyy] || 0) + 1\r\n  })\r\n  for (let [k, v] of Object.entries(dateCounts)) {\r\n    datesData.push({\"day\": k, \"value\": v})\r\n    \r\n  }\r\n\r\n  return (\r\n    <div style={{ width: '800px', height: yearHeight, margin: '0 auto'}}>\r\n      <ResponsiveCalendar\r\n        data={datesData}\r\n        from={'2018-01-02'}\r\n        to={dateTo}\r\n        margin={{ top: 30, right: 0, bottom: 40, left: 20 }}\r\n        align=\"top-left\"\r\n        minValue={1}\r\n        emptyColor=\"#eeeeee\"\r\n        colors={['#61cdbb', '#46ad9c', '#e8c1a0', '#f47560']}\r\n        yearSpacing={40}\r\n        monthBorderColor=\"#ffffff\"\r\n        dayBorderWidth={2}\r\n        daySpacing={1}\r\n        // isInteractive={false}\r\n        dayBorderColor=\"#ffffff\"\r\n        legends={[\r\n          {\r\n            anchor: 'bottom-right',\r\n            direction: 'row',\r\n            translateY: 40,\r\n            itemCount: 4,\r\n            itemWidth: 42,\r\n            itemHeight: 36,\r\n            itemsSpacing: 14,\r\n            itemDirection: 'right-to-left',\r\n          }\r\n        ]}\r\n      />\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Calendar","import React from \"react\"\r\n\r\nimport { Button, Badge } from 'react-bootstrap'\r\n\r\nconst SimilarAuthors = props => {\r\n\r\n  let entities\r\n\r\n  if (props.query) {\r\n    entities = props.query.data.Author[0].Similar_Authors.map((author, index) => {\r\n      return (\r\n        <Button variant=\"info\" key={index} size=\"sm\" className=\"mr-2 mb-2\" onClick={() => props.changeSearch('authors',author.Similar_Author)}>\r\n          {author.Similar_Author} <Badge variant=\"light\">{parseFloat(author.Similarity_Score * 100).toFixed(0)}% Match</Badge>\r\n        </Button>\r\n      )\r\n    })\r\n  } else {\r\n    entities = props.data.map((author,index) => {\r\n      return (\r\n        <Button variant=\"info\" key={index} size=\"sm\" className=\"mr-2 mb-2\" onClick={() => props.changeAuthor('authors',author[props.kv])}>\r\n          {author[props.kv]}\r\n        </Button>\r\n      )\r\n    })\r\n  }\r\n\r\n \r\n  return (\r\n    <div style={{width:800}}>\r\n      {entities}\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default SimilarAuthors","import React from \"react\"\r\n\r\nimport { Table } from 'react-bootstrap'\r\n\r\nconst Topics = props => {\r\n\r\n  const topics = props.query.data.Author[0].Main_Categories\r\n\r\n  if (topics.length === 0) return 'Not enough information to display.';\r\n\r\n  let totalPercentage = 0\r\n\r\n  const topicGen = topics.map((author, index) => {\r\n    if (index === 0) {\r\n      let poc = parseFloat(author.Percent_of_Coverage.toFixed(0))\r\n      totalPercentage += poc\r\n      return (\r\n        <tr className=\"bg-warning\" key={index} style={{marginBottom:5}}>\r\n          <td style={{paddingLeft: 10 }}>{index + 1}</td>\r\n          <td>{author.Main_Topic}</td>\r\n          <td>{poc}%</td>\r\n        </tr>\r\n      )\r\n    } if (index < 5) {\r\n      let poc = parseFloat(author.Percent_of_Coverage.toFixed(0))\r\n      totalPercentage += poc\r\n      return (\r\n        <tr key={index} style={{marginBottom:5}}>\r\n          <td style={{ paddingLeft: 10 }}>{index + 1}</td>\r\n          <td>{author.Main_Topic}</td>\r\n          <td>{poc}%</td>\r\n        </tr>\r\n      )\r\n    } if (index === 5) {\r\n      return (\r\n        <tr key={index} style={{marginBottom:5}}>\r\n          <td style={{ paddingLeft: 10 }}>{index+ 1}</td>\r\n          <td>Other</td>\r\n          <td>{100 - totalPercentage}%</td>\r\n        </tr>\r\n      )\r\n    }\r\n    return null\r\n  })\r\n  return (\r\n    <Table responsive hover borderless size=\"sm\">\r\n      <thead className=\"bg-secondary text-white\">\r\n        <tr style={{marginBottom:5}}>\r\n          <td style={{ borderRadius: '3px 0 0 0', paddingLeft: 10 }}>Rank</td>\r\n          <td>Topic</td>\r\n          <td style={{ borderRadius: '0 3px 0 0' }}>Percentage of Coverage</td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {topicGen}\r\n      </tbody>\r\n    </Table>\r\n  )\r\n}\r\n\r\nexport default Topics","import React from \"react\"\r\nimport { Table } from 'react-bootstrap'\r\n\r\nimport parseDomain from 'parse-domain'\r\nimport Anime from 'react-anime'\r\n\r\nimport '../styles/PublishedIn.css'\r\n\r\n\r\nconst PublishedIn = props => {\r\n\r\n  const domains = props.query.data.Author[0].Published_Domains\r\n  const articles = props.query.data.Author[0].Article_Archive\r\n\r\n  const [getNumdomains, setNumdomains] = React.useState(10)\r\n  // eslint-disable-next-line\r\n  const [getDomains, setDomains] = React.useState(domains.sort((a,b)=>b.Number_Of_Articles-a.Number_Of_Articles))\r\n  const [getIndexShow, setIndexShow] = React.useState()\r\n  const [getExpanded, setExpanded] = React.useState(false)\r\n\r\n  const indexHandler = index => {\r\n    setExpanded(false)\r\n    if (getIndexShow === index) {\r\n      setIndexShow()\r\n    } else {\r\n      setIndexShow(index)\r\n    }\r\n  }\r\n\r\n  const articleHandler = domain => {\r\n    \r\n    const filteredDomains = articles.filter(res => {\r\n      const parsedDomain = parseDomain(res.URL).domain + '.' + parseDomain(res.URL).tld\r\n      return parsedDomain === domain\r\n    })\r\n\r\n    if (filteredDomains.length === 0) {\r\n      return(\r\n        <ul className=\"list-group list-group-flush\">\r\n          <li className=\"list-group-item\" key=\"noitemsfound\">No items found.</li>\r\n        </ul>\r\n      )\r\n    }\r\n    const constructedListItems = filteredDomains\r\n      .filter((res,index)=>{\r\n        if (!getExpanded) {\r\n          return index < 5\r\n        } return true\r\n      })\r\n      .map((res,index)=>{\r\n        return (\r\n          <li className=\"list-group-item\" key={index}>\r\n            <a href={res.URL} key={res.URL} target='_blank' rel=\"noopener noreferrer\">{res.Title}</a>\r\n          </li>\r\n        )\r\n      })\r\n    return (\r\n      <ul className=\"list-group list-group-flush publishedin-links\">\r\n        <Anime translateY={['-1em', 0]}\r\n          opacity={[0, 1]}\r\n          easing=\"easeOutBack\"\r\n          duration={200}\r\n          delay={(el, index) => {\r\n            if (index > 5) return 50\r\n            return index * 10\r\n            }}>\r\n          {constructedListItems}\r\n        </Anime>\r\n        {filteredDomains.length > 5 && !getExpanded ? (\r\n          <li className=\"list-group-item\" key=\"expander\">\r\n            <span onClick={() => setExpanded(true)} style={{cursor:'pointer'}} className=\"text-primary\" key=\"showallarticles\">\r\n              + Show all articles\r\n            </span>\r\n          </li>\r\n        ) : null }\r\n      </ul>\r\n    )\r\n  }\r\n\r\n  const domainlist = getDomains.map((domain, index) => {\r\n    let roundedPageRank = parseFloat(domain.Open_Page_Rank.toFixed(2))\r\n    if (getNumdomains > index) {\r\n      if (index === 0) {\r\n        return (\r\n          <React.Fragment key={domain+'thing'}>\r\n            <tr className=\"bg-warning\" key={index} style={{ marginBottom: 5, cursor: 'pointer' }} onClick={()=>indexHandler(index)}>\r\n              <td style={{paddingLeft: 10}} key=\"firstdomain\">▸ <u>{domain.Domain_Name}</u></td>\r\n              <td key=\"roundedprmain\">{roundedPageRank}</td>\r\n              <td key=\"domnumarticles\">{domain.Number_Of_Articles}</td>\r\n            </tr>\r\n            {getIndexShow === index ? (\r\n              <>\r\n              <tr style={{ backgroundColor: 'transparent' }}>\r\n                <td colSpan={3} key=\"articlehandler\" style={{ padding: '10px 0' }}>\r\n                  {articleHandler(domain.Domain_Name)}\r\n                </td>\r\n              </tr>\r\n              </>\r\n            ) : null}\r\n          </React.Fragment>)\r\n      } else {\r\n        return (\r\n          <React.Fragment key={domain + index}>\r\n            <tr key={index} style={{ cursor: 'pointer' }} onClick={() => indexHandler(index)}>\r\n              <td style={{paddingLeft: 10 }} key=\"domainname\">▸ <u>{domain.Domain_Name}</u></td>\r\n              <td key=\"roundedpr\">{roundedPageRank}</td>\r\n              <td key=\"numarticles\">{domain.Number_Of_Articles}</td>\r\n            </tr>\r\n            {getIndexShow === index ? (\r\n              <tr style={{ backgroundColor: 'transparent' }}>\r\n                <td colSpan={3} key=\"articlehandler\" style={{ padding: '10px 0' }}>\r\n                  {articleHandler(domain.Domain_Name)}\r\n                </td>\r\n              </tr>\r\n            ) : null}\r\n          </React.Fragment>)\r\n      }\r\n    } return null\r\n  })\r\n\r\n\r\n  return (\r\n    <>\r\n    <Table responsive hover borderless size=\"sm\">\r\n      <thead className=\"bg-secondary text-white\">\r\n        <tr style={{ marginBottom: 5 }}>\r\n          <td style={{ borderRadius: '3px 0 0 0', paddingLeft: 10 }} key=\"domain\">Domain</td>\r\n          <td key=\"openpr\">Open Page Rank</td>\r\n          <td style={{ borderRadius: '0 3px 0 0' }} key='numpubd'>Num. Articles Published</td>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {domainlist}\r\n      </tbody>\r\n    </Table>\r\n    { getNumdomains === 10 && domains.length > getNumdomains ? (\r\n      <div className=\"mt-1 mb-2\">\r\n        <u onClick={() => setNumdomains(getNumdomains + 5)} style={{ cursor: 'pointer' }} className=\"text-muted\">\r\n          + Show 10 more domains\r\n        </u>\r\n      </div>\r\n    ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default PublishedIn","import React from \"react\"\r\n\r\nimport { Card } from 'react-bootstrap'\r\nimport parseDomain from 'parse-domain'\r\n\r\nconst LatestPublished = props => {\r\n\r\n  let articles\r\n  \r\n  console.log('thisdata',props.data)\r\n  switch(props.page) {\r\n    case('keywords'):\r\n      articles = props.data\r\n      break\r\n    case('authors'):\r\n      articles = props.query.data.Author[0].Article_Archive\r\n      break\r\n    default:\r\n      articles = props.query.data.Author[0].Article_Archive\r\n  }\r\n  \r\n\r\n  const [numarticles, setNumarticles] = React.useState(5)\r\n\r\n  const articlelist = articles.map((article, index) => {\r\n      if (numarticles > index) {\r\n        return (\r\n          <Card className=\"p-3 mb-2\" key={index}>\r\n            <Card.Title>\r\n              <a href={article.URL} target=\"blank\" key={index}>\r\n                {article.Title}\r\n              </a>\r\n            </Card.Title>\r\n            {article.Date.year ? (\r\n              <Card.Subtitle className=\"text-muted font-weight-normal\">\r\n                {parseDomain(article.URL).domain+'.'+parseDomain(article.URL).tld} - Published on {article.Date.month}/{article.Date.day}/{article.Date.year} \r\n              </Card.Subtitle>\r\n            ) : (\r\n              <Card.Subtitle className=\"text-muted font-weight-normal\">\r\n                {parseDomain(article.URL).domain+'.'+parseDomain(article.URL).tld}\r\n              </Card.Subtitle>\r\n            )}\r\n            \r\n          </Card>\r\n        )\r\n      } return null\r\n    }\r\n  )\r\n\r\n  return (\r\n    <>\r\n      {articlelist}\r\n      {articles.length > numarticles ? (\r\n        <div className=\"my-2\">\r\n          <u onClick={() => setNumarticles(numarticles+5)} style={{ cursor: 'pointer' }} className=\"text-muted\">\r\n            + Load 5 more articles\r\n          </u>\r\n        </div>\r\n      ) : null}\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LatestPublished","import React from 'react'\r\n\r\nimport '../styles/WordCloud.css'\r\n\r\nconst WordCloud = props => {\r\n\r\n  let entities\r\n\r\n  if(props.query){\r\n    entities = props.query.data.Author[0][props.endpoint].map(e => e[props.kv])\r\n  } else {\r\n    entities = props.data.map(e => e[props.kv])\r\n  }\r\n\r\n  const fontSizes = {\r\n    xl: {fontSize:'2em', backgroundColor:\"#fff\", borderRadius: '4px', cursor:'pointer' },\r\n    lg: {fontSize:'1.5em', backgroundColor:\"#fff\", borderRadius: '4px', cursor:'pointer' },\r\n    md: {fontSize:'1.25em', backgroundColor:\"#fff\", borderRadius: '4px', cursor:'pointer' },\r\n    sm: {fontSize:'1em', backgroundColor:\"#fff\", borderRadius: '4px', cursor:'pointer' },\r\n    xs: {fontSize:'.75em', backgroundColor:\"#fff\", borderRadius: '4px', cursor:'pointer' },\r\n  }\r\n\r\n  const changeSearchHandler = term => {\r\n    if(props.changeSearch){\r\n      props.changeSearch('keywords',term)\r\n    }\r\n  }\r\n\r\n  const entityHandler = entities.map((word, index) => {\r\n    if (index < 5) return <span style={fontSizes.xl} className=\"border mr-1 mb-1 py-2 px-3 d-inline-block wordCloudItem\" onClick={()=>changeSearchHandler(word)} key={index}>{word}</span>\r\n    if (index < 10) return <span style={fontSizes.lg} className=\"border mr-1 mb-1 py-2 px-3 d-inline-block wordCloudItem\" onClick={()=>changeSearchHandler(word)} key={index}>{word}</span>\r\n    if (index < 20) return <span style={fontSizes.md} className=\"border mr-1 mb-1 py-2 px-3 d-inline-block wordCloudItem\" onClick={()=>changeSearchHandler(word)} key={index}>{word}</span>\r\n    if (index < 30) return <span style={fontSizes.sm} className=\"border mr-1 mb-1 py-2 px-3 d-inline-block wordCloudItem\" onClick={()=>changeSearchHandler(word)} key={index}>{word}</span>\r\n    return <span style={fontSizes.xs} className=\"border mr-1 mb-1 py-2 px-3 d-inline-block wordCloudItem\" onClick={() => changeSearchHandler(word)} key={index}>{word}</span>\r\n  })\r\n\r\n  return (\r\n    <>\r\n      {entityHandler}\r\n    </>\r\n    )\r\n}\r\n\r\nexport default WordCloud","import React from 'react';\r\n\r\nconst TableRow = props => {\r\n  if (props.oneColumn) {\r\n    return (\r\n      <tr>\r\n        <td colspan={2} >{props.children}</td>\r\n      </tr>\r\n    )\r\n  } return (\r\n    <tr>\r\n      <td><span role=\"img\" aria-label={props.emojiDescription}>{props.emoji}</span> {props.emojiDescription}</td>\r\n      <td>{props.children}</td>\r\n    </tr>\r\n  )\r\n}\r\n\r\nexport default TableRow","import React from 'react'\r\nimport StatusMessage from './StatusMessage'\r\nimport { useQuery } from 'urql'\r\n\r\nconst QueryLoader = props => {\r\n  const [queryResult] = useQuery({\r\n    query: props.query,\r\n    variables: props.variables,\r\n  })\r\n\r\n  if (queryResult.fetching) {\r\n    return (\r\n      <StatusMessage text=\"Collecting additional results...\" loading noborder transparent />\r\n    )\r\n  } else if (queryResult.error || queryResult.data.Author.length === 0) {\r\n    return (\r\n      <StatusMessage text=\"Information not available.\" noborder error transparent />\r\n    )\r\n  } else {\r\n    return React.cloneElement(props.children,{query:queryResult})\r\n  }\r\n}\r\n\r\nexport default QueryLoader","import React from 'react'\r\nimport '../styles/Authors.css'\r\n\r\nimport md5 from 'md5'\r\n\r\nimport { useQuery } from 'urql'\r\nimport { getAuthorsBaseInfo, getAuthorsMainCategory, getAuthorsDiscussesEntities, getAuthorsDiscussesKeywords, getAuthorsPublishedDomains, getAuthorsArticleArchive, getAuthorsSimilarAuthors } from '../queriesAuthors'\r\n\r\nimport { Container, Row, Col, Image, Table } from 'react-bootstrap'\r\nimport { SocialIcon } from 'react-social-icons';\r\nimport Anime from 'react-anime'\r\n\r\nimport Map from './Map'\r\nimport Calendar from './Calendar'\r\nimport SimilarAuthors from './SimilarAuthors'\r\nimport Topics from './Topics'\r\nimport PublishedIn from './PublishedIn'\r\nimport LatestPublished from './LatestPublished'\r\nimport WordCloud from './WordCloud'\r\nimport AddToList from './AddToList'\r\nimport TableRow from './TableRow'\r\nimport StatusMessage from './StatusMessage'\r\nimport QueryLoader from './QueryLoader'\r\n\r\nconst Authors = props => {\r\n\r\n  const [gqlresBase] = useQuery({\r\n    query: getAuthorsBaseInfo,\r\n    variables: {name: props.authorName},\r\n  })\r\n\r\n  const emailHandler = str => {\r\n    const emailArray = str.split(', ')\r\n    return (emailArray.map((email,index) => (\r\n      <span key={index} className=\"mb-2 mr-1\" >\r\n        <small>\r\n          {email}\r\n          {emailArray.length > 1 && index + 1 !== emailArray.length && ','}\r\n        </small>\r\n      </span>\r\n    )))\r\n  }\r\n\r\n  if(!props.authorName) {\r\n    return(\r\n      <StatusMessage text=\"Enter a full name above to get started.\" instant/>\r\n    )\r\n  }\r\n  else if (gqlresBase.fetching) {\r\n    return (\r\n      <StatusMessage text=\"Collecting results...\" loading />\r\n    )\r\n  } else if (gqlresBase.error || gqlresBase.data.Author.length === 0) {\r\n    return (\r\n      <StatusMessage text=\"An error occurred. Please try again.\" />\r\n    )\r\n  } else {\r\n\r\n    const authorBase = gqlresBase.data.Author[0]\r\n    return (\r\n      <Container fluid className=\"my-5\">\r\n      <Container>\r\n        <Row className=\"mb-4\">\r\n          <Col sm={'auto'} className=\"mb-2\">\r\n            <Image src={\r\n              authorBase.emails ? \r\n              `https://s.gravatar.com/avatar/${md5(authorBase.emails)}?s=80` :\r\n              \"https://s.gravatar.com/avatar/fa5bba24186a52aed45eba94d5543fa6?s=80\"} roundedCircle />\r\n          </Col>\r\n          <Col>\r\n            <h2 className=\"d-inline-block\">\r\n              {authorBase.name ? authorBase.name : null}\r\n            </h2>\r\n            <AddToList author={authorBase.name} />\r\n            <hr style={{ margin:'0 0 .75em'}} />\r\n            <div className=\"author-email-list\">\r\n              <Anime translateY={['-2em', 0]}\r\n                opacity={[0, 1]}\r\n                easing=\"easeOutBack\"\r\n                duration={300}\r\n                delay={(el, index) => {\r\n                  if (index < 10) return 700 + index * 200\r\n                  if (index < 20) return 2100 + index * 40\r\n                  return 2800 + index * 10\r\n              }}>\r\n                {authorBase.emails ?\r\n                emailHandler(authorBase.emails) :\r\n                (<span key=\"noemails\" className=\"mb-2 mr-1\" ><small>No emails found for this author</small></span>)}\r\n              </Anime>\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Table className=\"bg-light\" striped responsive bordered>\r\n              <tbody>\r\n                \r\n                { (authorBase.twitter || authorBase.facebook || authorBase.linkedin) &&\r\n                <tr>\r\n                  <td><span role=\"img\" aria-label=\"Social Media\">💬</span> Social Media</td>\r\n                  <td>\r\n                    {authorBase.twitter && <SocialIcon url={`http://twitter.com/${authorBase.twitter}`}/> }\r\n                    {authorBase.facebook && <SocialIcon url={`${authorBase.facebook}`}/>}\r\n                    {authorBase.linkedin && <SocialIcon url={`${authorBase.linkedin}`}/>}\r\n                  </td>\r\n                </tr>}\r\n\r\n\r\n                { authorBase.location &&\r\n                <TableRow emoji=\"🌎\" emojiDescription=\"Location\">\r\n                  {authorBase.location}\r\n                  <Map location={authorBase.location} />\r\n                </TableRow>}\r\n\r\n                { authorBase.position &&\r\n                <TableRow emoji=\"📝\" emojiDescription=\"Position\">{authorBase.position}</TableRow>}\r\n                \r\n                { authorBase.current_company &&\r\n                <TableRow emoji=\"🌆\" emojiDescription=\"Current Company\">{authorBase.current_company}</TableRow>}\r\n                \r\n                { authorBase.current_company_size &&\r\n                <TableRow emoji=\"📊\" emojiDescription=\"Company Size\">{authorBase.current_company_size}</TableRow>}\r\n                \r\n                { authorBase.current_company_website &&\r\n                <TableRow emoji=\"🖥\" emojiDescription=\"Current Company Website\">{authorBase.current_company_website}</TableRow>}\r\n\r\n                {authorBase.company &&\r\n                <TableRow emoji=\"🏢\" emojiDescription=\"Associated Workplaces\">{authorBase.company}</TableRow>}\r\n\r\n                <TableRow emoji=\"📢\" emojiDescription=\"Associated topics\">\r\n                  <QueryLoader query={getAuthorsMainCategory} variables={{name:props.authorName}}>\r\n                    <Topics />\r\n                  </QueryLoader>\r\n                </TableRow>\r\n\r\n                <TableRow emoji=\"📆\" emojiDescription=\"Days Published\">\r\n                  <QueryLoader query={getAuthorsArticleArchive} variables={{name:props.authorName}}>\r\n                    <Calendar />\r\n                  </QueryLoader>\r\n                </TableRow>\r\n\r\n                <TableRow emoji=\"📄\" emojiDescription=\"Latest Articles Published\">\r\n                  <QueryLoader query={getAuthorsArticleArchive} variables={{name:props.authorName}}>\r\n                    <LatestPublished page=\"authors\" />\r\n                  </QueryLoader>\r\n                </TableRow>\r\n\r\n                <TableRow emoji=\"🔗\" emojiDescription=\"Published in\">\r\n                  <QueryLoader query={getAuthorsPublishedDomains} variables={{ name: props.authorName }}>\r\n                    <PublishedIn />\r\n                  </QueryLoader>\r\n                </TableRow>\r\n\r\n                <TableRow emoji=\"🔍\" emojiDescription=\"Similar Authors\">\r\n                  <QueryLoader query={getAuthorsSimilarAuthors} variables={{ name: props.authorName, pagerank: 7.5 }}>\r\n                    <SimilarAuthors changeSearch={props.changeSearch} />\r\n                  </QueryLoader>\r\n                </TableRow>  \r\n\r\n                <TableRow emoji=\"🔶\" emojiDescription=\"Discussed Entities\">\r\n                  <QueryLoader query={getAuthorsDiscussesEntities} variables={{ name: props.authorName }}>\r\n                    <WordCloud endpoint=\"Discusses_Entities\" kv=\"Entity\" changeSearch={props.changeSearch} />\r\n                  </QueryLoader>\r\n                </TableRow>\r\n\r\n                <TableRow emoji=\"🔠\" emojiDescription=\"Discussed Keywords\">\r\n                  <QueryLoader query={getAuthorsDiscussesKeywords} variables={{ name: props.authorName }}>\r\n                    <WordCloud endpoint=\"Discusses_Keywords\" kv=\"Keyword\" changeSearch={props.changeSearch} />\r\n                  </QueryLoader>\r\n                </TableRow>\r\n\r\n                        \r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default Authors","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\n\r\nconst Search = props => {\r\n\r\n  let heading, placeholder, recentList\r\n\r\n  switch(props.pageName) {\r\n    case 'authors':\r\n      heading = \"Enter a full name:\"\r\n      placeholder = \"John Smith\"\r\n      recentList = props.recentAuthors\r\n      break\r\n    case 'keywords':\r\n      heading = \"Enter a keyword:\"\r\n      placeholder = \"Politics\"\r\n      recentList = props.recentKeywords\r\n      break\r\n    default:\r\n      heading = \"Enter a search term:\"\r\n      placeholder = \"John Smith\"\r\n  }\r\n\r\n  const recentHandler = recentList.map((value,index)=>{\r\n    if (index < 5){\r\n      return (\r\n        <span key={index}>\r\n          <u onClick={() => props.changeSearch(props.pageName,value)} style={{cursor:'pointer'}}>\r\n            {value}\r\n          </u>\r\n          {index < 4 ? ', ' : null}\r\n        </span>\r\n      )\r\n    } return null\r\n  })\r\n\r\n  return (\r\n    <Container fluid className=\"bg-light py-5\">\r\n      <Container>\r\n        <Row>\r\n          <Col>\r\n            <form onSubmit={props.setSearch}>\r\n              <div className=\"form-group\">\r\n                <label><span role=\"img\" aria-label=\"Search\">🔍</span> {heading}</label>\r\n                <input type=\"text\" name=\"name\" placeholder={placeholder} className=\"form-control form-control-lg\" id=\"searchComponentInput\" />\r\n              </div>\r\n              {recentHandler.length > 0 &&\r\n              <div className=\"mb-3 text-muted\">\r\n                Your Recent Searches: {recentHandler}\r\n              </div>\r\n              }\r\n              <input type=\"submit\" value=\"Search\" className=\"btn btn-primary btn-lg\"/>\r\n            </form>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n\r\n  )\r\n}\r\n\r\nexport default Search","import React from 'react'\r\nimport { Container, Row, Col } from 'react-bootstrap'\r\n\r\nexport default () => (\r\n  <Container className=\"bg-light my-5 py-5 rounded text-black-50 border\">\r\n    <Row className=\"align-items-center text-center\">\r\n      <Col>Please log in to get started</Col>\r\n    </Row>\r\n  </Container>\r\n)","// src/react-auth0-spa.js\r\nimport React, { useState, useEffect, useContext } from \"react\";\r\nimport createAuth0Client from \"@auth0/auth0-spa-js\";\r\nimport { firebaseClient } from './firebase'\r\n\r\nconst DEFAULT_REDIRECT_CALLBACK = () =>\r\n  window.history.replaceState({}, document.title, window.location.pathname);\r\n\r\nexport const Auth0Context = React.createContext();\r\nexport const useAuth0 = () => useContext(Auth0Context);\r\nexport const Auth0Provider = ({\r\n  children,\r\n  onRedirectCallback = DEFAULT_REDIRECT_CALLBACK,\r\n  ...initOptions\r\n}) => {\r\n  const [isAuthenticated, setIsAuthenticated] = useState();\r\n  const [user, setUser] = useState();\r\n  const [auth0Client, setAuth0] = useState();\r\n  const [loading, setLoading] = useState(true);\r\n  const [popupOpen, setPopupOpen] = useState(false);\r\n\r\n  useEffect(() => {\r\n    const initAuth0 = async () => {\r\n      const auth0FromHook = await createAuth0Client(initOptions);\r\n      setAuth0(auth0FromHook);\r\n\r\n      if (window.location.search.includes(\"code=\") &&\r\n        window.location.search.includes(\"state=\")) {\r\n        const { appState } = await auth0FromHook.handleRedirectCallback();\r\n        onRedirectCallback(appState);\r\n      }\r\n\r\n      const isAuthenticated = await auth0FromHook.isAuthenticated();\r\n\r\n      setIsAuthenticated(isAuthenticated);\r\n\r\n      if (isAuthenticated) {\r\n        const user = await auth0FromHook.getUser();\r\n        setUser(user);\r\n\r\n      //////////////////////////////////////\r\n      // Once we're authenticated with auth0,\r\n      // we want to use their ID token and\r\n      // get back a JWT token for fb auth\r\n      //////////////////////////////////////\r\n\r\n      const auth0token = await auth0FromHook.getIdTokenClaims()\r\n        const fbresponse = await fetch('https://campground.frac.tl:3001/firebase', {\r\n        headers: {\r\n          'Authorization': `Bearer ${auth0token.__raw}`,\r\n        },\r\n      });\r\n      const fbdata = await fbresponse.json();\r\n      await firebaseClient.setToken(fbdata.firebaseToken);\r\n      await firebaseClient.updateProfile(user);\r\n\r\n      //////////////////////////////////////\r\n      }\r\n\r\n      setLoading(false);\r\n    };\r\n    initAuth0();\r\n    // eslint-disable-next-line\r\n  }, []);\r\n\r\n  const loginWithPopup = async (params = {}) => {\r\n    setPopupOpen(true);\r\n    try {\r\n      await auth0Client.loginWithPopup(params);\r\n    } catch (error) {\r\n      console.error(error);\r\n    } finally {\r\n      setPopupOpen(false);\r\n    }\r\n    const user = await auth0Client.getUser();\r\n    setUser(user);\r\n    setIsAuthenticated(true);\r\n  };\r\n\r\n  const handleRedirectCallback = async () => {\r\n    setLoading(true);\r\n    await auth0Client.handleRedirectCallback();\r\n    const user = await auth0Client.getUser();\r\n    setLoading(false);\r\n    setIsAuthenticated(true);\r\n    setUser(user);\r\n  };\r\n  return (\r\n    <Auth0Context.Provider\r\n      value={{\r\n        isAuthenticated,\r\n        user,\r\n        loading,\r\n        popupOpen,\r\n        loginWithPopup,\r\n        handleRedirectCallback,\r\n        getIdTokenClaims: (...p) => auth0Client.getIdTokenClaims(...p),\r\n        loginWithRedirect: (...p) => auth0Client.loginWithRedirect(...p),\r\n        getTokenSilently: (...p) => auth0Client.getTokenSilently(...p),\r\n        getTokenWithPopup: (...p) => auth0Client.getTokenWithPopup(...p),\r\n        logout: (...p) => auth0Client.logout(...p)\r\n      }}\r\n    >\r\n      {children}\r\n    </Auth0Context.Provider>\r\n  );\r\n};","import React from 'react'\r\nimport { Navbar, Nav, Container, Button, NavDropdown, Image } from 'react-bootstrap'\r\nimport { useAuth0 } from \"../react-auth0-spa\";\r\nimport { firebaseClient } from '../firebase'\r\n\r\nconst NavigationBar = props => {\r\n\r\n  const { isAuthenticated, loginWithRedirect, logout, user } = useAuth0();\r\n\r\n  return (\r\n    <Container fluid className=\"bg-dark\">\r\n    <Container>\r\n      <Navbar collapseOnSelect expand=\"lg\" bg=\"dark\" variant=\"dark\" className=\"px-0 py-3\">\r\n        <Navbar.Brand href=\"#home\"><span role=\"img\" aria-label=\"Campground\" className=\"font-weight-bold\">⛺ Campground</span></Navbar.Brand>\r\n        <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n        <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <Nav.Link href=\"#AuthorSearch\" onClick={()=>{props.setPage('authors')}}>Author Search</Nav.Link>\r\n            <Nav.Link href=\"#Keyword\" onClick={() => {props.setPage('keywords')}}>Keyword Search</Nav.Link>\r\n          </Nav>\r\n          <Nav>\r\n            {isAuthenticated ?\r\n            <>\r\n              <Image src={user.picture} alt=\"Profile\" roundedCircle style={{height:32,width:32,alignSelf:'center'}} className=\"d-none d-lg-block\" />\r\n                <NavDropdown title={user.name} id=\"collasible-nav-dropdown\" alignRight>\r\n                <NavDropdown.Item href=\"#MySavedAuthors\" onClick={()=>{props.setPage('lists')}}>My Saved Authors</NavDropdown.Item>\r\n                <NavDropdown.Divider />\r\n                <NavDropdown.Item disabled>{user.email}</NavDropdown.Item>\r\n                <NavDropdown.Item href=\"#action/3.3\" onClick={() => {\r\n                  firebaseClient.signOut()\r\n                  logout();\r\n                  }}>Log Out</NavDropdown.Item>\r\n              </NavDropdown>\r\n            </>\r\n            :\r\n            <Button size=\"sm\" variant=\"outline-light\" onClick={() => loginWithRedirect({})}>Log in</Button>\r\n            }\r\n          </Nav>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </Container>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default NavigationBar","import React from 'react'\r\nimport { useQuery } from 'urql'\r\n\r\nimport { getKeywordsBaseInfo } from '../queriesKeywords'\r\nimport { Container, Row, Col, Table } from 'react-bootstrap'\r\n\r\nimport StatusMessage from './StatusMessage'\r\nimport TableRow from './TableRow'\r\n// import QueryLoader from './QueryLoader'\r\nimport WordCloud from './WordCloud'\r\nimport SimilarAuthors from './SimilarAuthors'\r\nimport LatestPublished from './LatestPublished'\r\n\r\nconst Keywords = props => {\r\n\r\n\r\n  const [gqlresBase] = useQuery({\r\n    query: getKeywordsBaseInfo,\r\n    variables: { search_input: props.keywordName, min_pagerank: 7.5 },\r\n  })\r\n\r\n  if (!props.keywordName) {\r\n    return <StatusMessage text=\"Enter any search term above to get started.\" />\r\n  } else if (gqlresBase.fetching) {\r\n    return <StatusMessage text=\"Collecting results...\" loading />\r\n  } else if (gqlresBase.error) {\r\n    return <StatusMessage text=\"An error occurred. Please try again.\" />\r\n  } \r\n    return (\r\n    <Container fluid className=\"my-5\">\r\n      <Container>\r\n        <Row className=\"mb-4\">\r\n          <Col>\r\n            <h2 className=\"d-inline-block\">\r\n              {props.keywordName}\r\n            </h2>\r\n          </Col>\r\n        </Row>\r\n        <Row>\r\n          <Col>\r\n            <Table className=\"bg-light\" striped responsive bordered>\r\n              <tbody>\r\n                  <TableRow emoji=\"🔠\" emojiDescription=\"Most Associated Keywords\">\r\n                    <WordCloud data={gqlresBase.data.Term_Search_Most_Associated_Keywords} kv=\"Keyword\" changeSearch={props.changeSearch} />\r\n                  </TableRow>\r\n                  <TableRow emoji=\"🔣\" emojiDescription=\"Most Associated Entities\">\r\n                    <WordCloud data={gqlresBase.data.Term_Search_Most_Associated_Entities} kv=\"Entity\" changeSearch={props.changeSearch} />  \r\n                  </TableRow>\r\n                  <TableRow emoji=\"💻\" emojiDescription=\"Most Associated Articles\">\r\n                    <LatestPublished data={gqlresBase.data.Term_Search_Most_Associated_Articles} page=\"keywords\" />\r\n                  </TableRow>\r\n                  <TableRow emoji=\"🌎\" emojiDescription=\"Most Associated Domains\">\r\n                    <WordCloud data={gqlresBase.data.Term_Search_Most_Associated_Domains} kv=\"Domain\" changeSearch={props.changeSearch} />\r\n                  </TableRow>\r\n                  <TableRow emoji=\"📕\" emojiDescription=\"Most Associated Authors\">\r\n                    <SimilarAuthors data={gqlresBase.data.Term_Search_Most_Associated_Authors} kv=\"Name\" changeAuthor={props.changeAuthor} changeSearch={props.changeSearch} />\r\n                  </TableRow>\r\n                  <TableRow emoji=\"📚\" emojiDescription=\"Most Associated Topics\">\r\n                    <WordCloud data={gqlresBase.data.Term_Search_Most_Associated_Topics} kv=\"Topic\" changeSearch={props.changeSearch} />\r\n                  </TableRow>\r\n              </tbody>\r\n            </Table>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </Container>\r\n  )\r\n}\r\n\r\nexport default Keywords","export const getKeywordsBaseInfo = `\r\n  query Term_Search($search_input:String, $min_pagerank:Float){\r\n    Term_Search_Most_Associated_Keywords(search_input:$search_input){\r\n      Keyword,\r\n      Ranking,\r\n    },\r\n    Term_Search_Most_Associated_Entities(search_input:$search_input){\r\n      Entity,\r\n      Ranking,\r\n    },\r\n    Term_Search_Most_Associated_Domains (search_input:$search_input, min_pagerank:$min_pagerank){\r\n      Domain,\r\n      Open_Page_Rank,\r\n      Domain_Authority,\r\n      Ranking,\r\n    },\r\n    Term_Search_Most_Associated_Authors(search_input:$search_input, min_pagerank:$min_pagerank){\r\n      Name,\r\n      Emails,\r\n      Twitter,\r\n      MuckRack,\r\n      Ranking,\r\n    },\r\n    Term_Search_Most_Associated_Topics(search_input:$search_input){\r\n      Topic,\r\n      Ranking,\r\n    },\r\n    Term_Search_Most_Associated_Articles(search_input:$search_input){\r\n        URL,\r\n        Date {\r\n          year,\r\n          month,\r\n          day,\r\n        },\r\n        Title,\r\n        Domain_Name,\r\n        Score,\r\n    }\r\n  }\r\n`","import React, { useEffect } from 'react'\nimport './styles/App.css'\nimport 'mapbox-gl/src/css/mapbox-gl.css'\nimport { Provider, createClient } from 'urql'\n\nimport Authors from './components/Authors'\nimport Search from './components/Search'\nimport LoginNotice from './components/LoginNotice'\nimport NavigationBar from './components/NavigationBar'\nimport StatusMessage from './components/StatusMessage'\nimport ProfileLists from './components/ProfileLists'\nimport Keywords from './components/Keywords'\n\nimport { firebaseClient } from './firebase'\nimport { useAuth0 } from \"./react-auth0-spa\";\n\n\nconst GraphQLClient = createClient({ url:'https://graphql.frac.tl:3333/graphql'})\n\nconst App = () => {\n\n  const [getSearch, setSearch] = React.useState('')\n  const [getRecentAuthorSearches, setRecentAuthorSearches] = React.useState([])\n  const [getRecentKeywordSearches, setRecentKeywordSearches] = React.useState([])\n  const [getPageName, setPageName] = React.useState('authors')\n\n  const { loading, isAuthenticated } = useAuth0();\n  \n  \n  useEffect(() => {\n    !loading && isAuthenticated &&\n    firebaseClient.recentAuthorSearches()\n      .then(res => setRecentAuthorSearches(res))\n    !loading && isAuthenticated &&\n    firebaseClient.recentKeywordSearches()\n      .then(res => setRecentKeywordSearches(res))\n  }, [loading, isAuthenticated])\n\n\n  const setSearchHandler = e => {\n    e.preventDefault();\n    let searchBarNameValue = document.querySelector('#searchComponentInput').value\n    firebaseClient.addRecentSearch(searchBarNameValue,getPageName)\n    switch(getPageName) {\n      case 'authors':\n        setRecentAuthorSearches([searchBarNameValue, ...getRecentAuthorSearches])\n        break\n      case 'keywords':\n        setRecentKeywordSearches([searchBarNameValue, ...getRecentKeywordSearches])\n        break\n      default:\n    }\n    setSearch(document.querySelector('#searchComponentInput').value)\n  }\n\n  const changePageHandler = pageName => {\n    if (document.querySelector('#searchComponentInput')) {\n      document.querySelector('#searchComponentInput').value = ''\n    }\n    setSearch('')\n    setPageName(pageName)\n  }\n\n  // need to refactor this code\n  async function loadSearchViaChild(page, value) {\n    await setSearch(value)\n    await setPageName(page)\n    await changeSearch(page,value)\n  }\n\n  const changeSearch = (page,value) => {\n    document.querySelector('#searchComponentInput').value = value\n    let searchBarNameValue = document.querySelector('#searchComponentInput').value\n    firebaseClient.addRecentSearch(page, searchBarNameValue)\n    switch (page) {\n      case 'authors':\n        setRecentAuthorSearches([searchBarNameValue, ...getRecentAuthorSearches])\n        break\n      case 'keywords':\n        setRecentKeywordSearches([searchBarNameValue, ...getRecentKeywordSearches])\n        break\n      default:\n    }\n    setSearch(document.querySelector('#searchComponentInput').value)\n  }\n\n\n  if (loading) {\n    return (\n      <StatusMessage text=\"Loading Campground...\" loading />\n    );\n  };\n  \n  return (\n    <Provider value={GraphQLClient}>\n      <NavigationBar setPage={changePageHandler} />\n      {isAuthenticated && getPageName !== 'lists' &&\n        <Search \n          setSearch={setSearchHandler} \n          changeSearch={changeSearch} \n          recentAuthors={getRecentAuthorSearches}\n          recentKeywords={getRecentKeywordSearches}\n          pageName={getPageName} />}\n      {isAuthenticated && getPageName === 'authors' && <Authors authorName={getSearch} changeSearch={loadSearchViaChild} />}\n      {isAuthenticated && getPageName === 'keywords' && <Keywords keywordName={getSearch} changeSearch={changeSearch} changeAuthor={loadSearchViaChild} />}\n      {isAuthenticated && getPageName === 'lists' && <ProfileLists changeSearch={loadSearchViaChild} />}\n      { !isAuthenticated && <LoginNotice /> }\n    </Provider>\n    )\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory();","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './styles/index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { Auth0Provider } from \"./react-auth0-spa\";\nimport history from \"./utils/history\";\n\nconst onRedirectCallback = appState => {\n  history.push(\n    appState && appState.targetUrl\n      ? appState.targetUrl\n      : window.location.pathname\n  );\n};\n\nReactDOM.render(\n  <Auth0Provider\n    domain={process.env.REACT_APP_AUTH0_DOMAIN}\n    client_id={process.env.REACT_APP_AUTH0_CLIENTID}\n    redirect_uri={window.location.href}\n    onRedirectCallback={onRedirectCallback}\n  >\n    <App />\n  </Auth0Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();"],"sourceRoot":""}